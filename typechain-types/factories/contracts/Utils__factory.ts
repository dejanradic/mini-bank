/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Utils, UtilsInterface } from "../../contracts/Utils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "addDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "doesArrayContainValueAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "doesArrayContainValueBytes32",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "getFirstIndexByValueAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "getFirstIndexByValueBytes32",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "getKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "removeFirstFromArrayByValueBytes32",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610b5661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009d5760003560e01c806392f32e1f1161007057806392f32e1f1461011e578063b0147f731461013e578063cacad9b41461015e578063ce893e9e14610171578063d37aec921461018457600080fd5b806317dd29b0146100a25780632a6f52d7146100d55780632abc4760146100e857806356698028146100fb575b600080fd5b8180156100ae57600080fd5b506100c26100bd366004610679565b610197565b6040519081526020015b60405180910390f35b6100c26100e3366004610679565b610272565b6100c26100f6366004610706565b610290565b61010e6101093660046107ee565b6102df565b60405190151581526020016100cc565b61013161012c366004610706565b61032d565b6040516100cc919061083a565b81801561014a57600080fd5b506100c261015936600461089a565b61047f565b6100c261016c3660046108c6565b6105ad565b61010e61017f366004610970565b610605565b6100c26101923660046109c4565b610649565b6000806101f3848054806020026020016040519081016040528092919081815260200182805480156101e857602002820191906000526020600020905b8154815260200190600101908083116101d4575b505050505084610290565b8454909150849061020690600190610a6f565b8154811061021657610216610a82565b906000526020600020015484828154811061023357610233610a82565b90600052602060002001819055508380548061025157610251610a98565b60019003818190600052602060002001600090559055839150505b92915050565b600061027f826001610aae565b6102899084610ac5565b9392505050565b6000805b83518110156102d657828482815181106102b0576102b0610a82565b6020026020010151036102c457905061026c565b806102ce81610ad8565b915050610294565b50509051919050565b600083839050610323858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250879250610290915050565b1415949350505050565b6060600061033b8484610290565b90506000846001865161034e9190610a6f565b8151811061035e5761035e610a82565b6020026020010151905084828151811061037a5761037a610a82565b602002602001015185600187516103919190610a6f565b815181106103a1576103a1610a82565b602002602001018181525050808583815181106103c0576103c0610a82565b6020026020010181815250506000600186516103dc9190610a6f565b67ffffffffffffffff8111156103f4576103f461069b565b60405190808252806020026020018201604052801561041d578160200160208202803683370190505b50905060005b81518110156104755786818151811061043e5761043e610a82565b602002602001015182828151811061045857610458610a82565b60209081029190910101528061046d81610ad8565b915050610423565b5095945050505050565b6000806104e5848054806020026020016040519081016040528092919081815260200182805480156104da57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104bc575b5050505050846105ad565b845490915084906104f890600190610a6f565b8154811061050857610508610a82565b9060005260206000200160009054906101000a90046001600160a01b031684828154811061053857610538610a82565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508380548061057657610576610a98565b6000828152602090206000199082018101805473ffffffffffffffffffffffffffffffffffffffff19169055019055509192915050565b6000805b83518110156102d657826001600160a01b03168482815181106105d6576105d6610a82565b60200260200101516001600160a01b0316036105f357905061026c565b806105fd81610ad8565b9150506105b1565b6000838390506103238585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792506105ad915050565b60008160405160200161065c9190610af1565b604051602081830303815290604052805190602001209050919050565b6000806040838503121561068c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156106da576106da61069b565b604052919050565b600067ffffffffffffffff8211156106fc576106fc61069b565b5060051b60200190565b6000806040838503121561071957600080fd5b823567ffffffffffffffff81111561073057600080fd5b8301601f8101851361074157600080fd5b80356020610756610751836106e2565b6106b1565b82815260059290921b8301810191818101908884111561077557600080fd5b938201935b838510156107935784358252938201939082019061077a565b98969091013596505050505050565b60008083601f8401126107b457600080fd5b50813567ffffffffffffffff8111156107cc57600080fd5b6020830191508360208260051b85010111156107e757600080fd5b9250929050565b60008060006040848603121561080357600080fd5b833567ffffffffffffffff81111561081a57600080fd5b610826868287016107a2565b909790965060209590950135949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561087257835183529284019291840191600101610856565b50909695505050505050565b80356001600160a01b038116811461089557600080fd5b919050565b600080604083850312156108ad57600080fd5b823591506108bd6020840161087e565b90509250929050565b600080604083850312156108d957600080fd5b823567ffffffffffffffff8111156108f057600080fd5b8301601f8101851361090157600080fd5b80356020610911610751836106e2565b82815260059290921b8301810191818101908884111561093057600080fd5b938201935b83851015610955576109468561087e565b82529382019390820190610935565b9550610964905086820161087e565b93505050509250929050565b60008060006040848603121561098557600080fd5b833567ffffffffffffffff81111561099c57600080fd5b6109a8868287016107a2565b90945092506109bb90506020850161087e565b90509250925092565b600060208083850312156109d757600080fd5b823567ffffffffffffffff808211156109ef57600080fd5b818501915085601f830112610a0357600080fd5b813581811115610a1557610a1561069b565b610a27601f8201601f191685016106b1565b91508082528684828501011115610a3d57600080fd5b8084840185840137600090820190930192909252509392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561026c5761026c610a59565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b808202811582820484141761026c5761026c610a59565b8082018082111561026c5761026c610a59565b600060018201610aea57610aea610a59565b5060010190565b6000825160005b81811015610b125760208186018101518583015201610af8565b50600092019182525091905056fea2646970667358221220d253c3a9a08d2648c763319b7dd2f40fca3f5cc2e6e05b8b02520474fb5af6e764736f6c63430008110033";

type UtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Utils__factory extends ContractFactory {
  constructor(...args: UtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  override connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new utils.Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}
